"use client";

import { useRef, useEffect, useState } from "react";
import styles from "./page.module.css";

const paragraphs = [
  {
    title: "고양이는 푸르다",
    content:
      ["언덕 위에서 처음 마주한 고양이는, 온몸이 마치 하늘빛 물감으로 칠해진 것처럼 짙은 푸른색을 띠고 있었다. 햇볕이 밝게 내리쬐는 한낮이면 그 털이 반사되어, 보는 사람의 눈이 시릴 정도로 화사하게 빛났다. 처음에는 이 고양이가 새로운 품종이거나 어딘가 실험실에서 태어난 희귀종이 아닐까 의심하기도 했지만, 고양이의 표정은 그저 평범하게 무심했고 동작도 느긋해 보였다. 가끔 길가에 놓인 박스 안으로 들어가거나, 지나가는 사람을 향해 마른울음소리를 내는 모습은 여느 길고양이와 다르지 않았다. 다만 가까이서 보면, 그 푸른 털이 만들어내는 독특한 풍경이 마치 작은 요정이라도 보는 것처럼 묘한 감흥을 주었다.",
        "아침햇살이 막 올라올 때는 털이 은은한 청록빛으로 바뀌어, 본래의 색깔이 어디까지인지 알 수 없었다. 시간대와 광량에 따라 고양이의 색감이 조금씩 달라지는 것은, 자연이 빚어낸 환상적인 작품 같았다. 이 고양이를 발견한 주민들은 서로 사진을 찍어 SNS에 올리며 ‘푸른 요정 고양이’라는 별명을 붙여 주었다. 덕분에 동네에서는 이 고양이가 하나의 작은 명소가 되었다. 언덕에 올라와 산책하는 사람들은 어김없이 파란 고양이를 찾아 두리번거렸고, 간혹 소시지나 캔 사료를 가져다주는 사람도 있었다.",
        "그러나 정작 고양이 자신은 이 모든 관심에 별다른 흥미가 없어 보였다. 그저 매일 일정 시간 언덕 주변을 어슬렁거리다 배가 고프면 먹을 것을 찾고, 나른해지면 나무 그늘 아래 웅크려 낮잠을 즐길 뿐이었다. 옅은 바람이 불 때마다 그 푸른 털이 바스락거리듯 움직이는 장면을 보고 있으면, 이 고양이가 단지 파란색인 것만으로도 사람들의 마음에 기이한 평온을 주고 있다는 생각이 들었다."],
  },
  {
    title: "그러나 그 고양이는 사실..",
    content:
      ["며칠이 지나도록 모습을 드러내지 않던 파란 고양이를 다시 발견했을 때, 나는 의문을 풀 단서를 얻게 되었다. 근처 주차장 도로가 슬쩍 파랗게 물들어 있는 곳이 있었는데, 무언가 액체가 흘렀다가 굳어버린 듯한 얼룩이 눈에 띄었다. 자세히 살펴보니 그것은 인근 공장 부지에서 쓰는 청색 염료가 유출된 흔적이었다. 언덕 아래쪽에 있는 작은 산업 단지에서는 가끔 사고로 페인트나 염료가 도로에 흘러넘치는 일이 종종 있었다고 한다. 그중 한 번은 대규모 유출 사고가 있었고, 흰색이나 밝은 색 털을 가진 동물들이 접촉했다면 쉽게 물들 가능성이 커 보였다.",
        "이 소식을 들은 후, 나는 그 파란 고양이가 사실은 일시적으로 물들어버린 평범한 길고양이라는 결론에 이르게 되었다. 더욱이 이 고양이가 원래는 희미한 회색빛 털을 가지고 있었다는 이야기도 전해 들었다. 색깔만으로는 신비롭고 독특하게 보이지만, 정작 고양이에게는 결코 달가운 일이 아닐 수도 있다는 생각이 들었다. 만약 독성이 강한 물질이었다면 고양이의 건강에 해로웠을 테고, 실제로 염료가 어느 정도 해로운지 확인이 필요했을지도 모른다.",
        "이런 사실을 알아차리자, 파란 고양이를 향해 품었던 환상은 조금씩 깨져 나갔지만 그 대신 또 다른 걱정이 생겼다. 혹여 사람이 만지거나 가까이 다가가면 2차 오염 가능성도 있지 않을까? 고양이가 건강에는 지장이 없을까? 이런 현실적인 생각들 말이다. 그럼에도 사람들은 여전히 이 파란 고양이를 보기 위해 언덕을 찾았고, 구청이나 보호 단체 측에서도 상황을 파악하러 나오기 시작했다. 어쩌면 이 과한 주목이 고양이에게는 또 다른 부담이 될 수도 있다고 생각하니 마음이 조금 복잡해졌다.",
      ],
  },
  {
    title: "고양이는 그래도 고양이다",
    content:
      ["하지만 염료의 비밀이 밝혀지고 나서도 고양이의 일상적인 모습은 변함이 없었다. 늦은 오후가 되면, 고양이는 골목 어귀에서부터 느긋하게 걸어 나와 언덕으로 향했다. 마치 자신의 구역을 순찰이라도 하듯, 여기저기를 킁킁대며 살펴보다가, 마음에 드는 풀밭이나 돌 위에 엉덩이를 내려놓고 졸기 시작했다. 지나가던 사람이 사진을 찍으려 하면 짧게 ‘야옹’ 한 번 하고 다시 잠에 빠져들었고, 아이들이 장난감으로 놀아주려 해도 금세 흥미를 잃고 몸을 비틀어 버렸다.",
        "파란 털이 점점 흐릿해지는지, 이전처럼 강렬한 청색이라기보다는 세탁물을 여러 번 헹군 뒤 남은 자국처럼 푸른 기운만 살짝 감도는 정도가 되었다. 그럼에도 고양이는 나른하게 하품을 하거나, 남아 있는 파란 발자국을 따라 마치 자기 영역을 확인하듯 두리번거릴 뿐이었다. 색깔이 달라지고, 사람들이 붙은 관심이 커졌어도, 이 고양이에게는 큰 변화가 없었다. 결국 고양이라는 동물은 특유의 독립심과 여유를 잃지 않는 법이니까.",
        "머리를 쓰다듬으려는 손길을 밀어내기도 하고, 마음이 내키는 순간에는 슬쩍 비벼대며 애교를 부리는 양면성 또한 여전히 그대로였다. 주변에서 간식을 내밀면 냄새만 맡고 무심히 자리를 뜨기도 하고, 어떤 날에는 배가 고팠는지 그것을 허겁지겁 먹어 치우기도 했다. 온몸이 파랗든, 희미한 빛만 남았든, 이 고양이가 보여주는 태도에는 ‘나답게 살겠다’는 일관성이 묻어 있었다. 그래서인지, 길 위에서 제멋대로 살아가는 모습을 볼 때마다 고양이가 지닌 매력은 결국 그 존재만으로도 충분하다는 생각이 들었다.",
      ],
  },
  {
    title: "결국 고양이는 귀엽다",
    content:
      ["결국 고양이에게 있어 ‘색깔’이란 그저 하나의 외형적 특징일 뿐, 고양이 특유의 매력을 결정짓는 요소는 아니었다. 사람들은 이 푸른 고양이를 보면서 신비하다고 수군거렸고, 혹은 안타깝고 위험한 상황이라고 걱정도 했지만, 정작 고양이는 눈앞의 순간을 살아가는 데에만 집중했다. 길 위의 먼지를 밟으며, 가끔 버려진 박스 안을 탐험하고, 해가 지면 시원한 바람이 부는 곳에서 몸을 뉘였다. 그리고 그 모든 동작 하나하나가 너무나도 ‘고양이다웠다.’",
        "그런 생동감과 제멋대로임 속에서 피어나는 우아함, 그리고 아무렇게나 앉아 있어도 풍기는 귀여움이야말로 고양이를 사랑스럽게 만드는 핵심이 아닐까. 털빛이 파랗든, 회색이든, 갈색이든 간에 고양이는 늘 그 자체로 귀엽고, 바라보는 사람의 마음을 온통 사로잡는다.",
        "이제 나는 언덕에 오를 때마다, 멀리서 파란빛을 조금이나마 간직한 고양이를 찾는다. 가끔은 파란색이 거의 빠져버려도, 또 다른 궁금증이나 호기심을 자극하는 순간이 찾아올 것만 같다. 왜냐하면, 고양이가 보여주는 모든 모습, 모든 행동 하나하나가 이미 충분히 신비롭고, 무엇보다 귀엽기 때문이다."
      ],
  },
];

export default function ParagraphObserverPage() {
  const refs = useRef([]);
  const [index, setIndex] = useState(0);

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const index = refs.current.indexOf(entry.target);
            setIndex(index);
          }
        });
      },
      { threshold: 0.4 },
    );

    refs.current.forEach((ref) => {
      if (ref) {
        observer.observe(ref);
      }
    });

    return () => {
      observer.disconnect();
    };
  }, []);

  return (
    <div className={styles.page}>
      <header className={styles.header}>
        <div>
          {paragraphs.map(({ title }, i) => (
            <p key={`h-${title}`} className={i === index ? styles.active : ""}>
              {title}
            </p>
          ))}
        </div>
      </header>

      <main className={styles.main}>
        {paragraphs.map(({ title, content }, i) => (
          <section
            key={title}
            ref={(el) => (refs.current[i] = el)}
          >
            <h2>{title}</h2>
            {content.map((text, i) =>
              <p key={`text-${i}`}>{text}</p>
            )}
          </section>
        ))}
      </main>
    </div>
  );
}
